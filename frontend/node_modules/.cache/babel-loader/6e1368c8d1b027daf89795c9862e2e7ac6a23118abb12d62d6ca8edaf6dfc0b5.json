{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sora\\\\Desktop\\\\frontend\\\\src\\\\pages\\\\CartPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartPage = ({\n  removeFromCart\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Fetch cart data from the backend when the component mounts\n\n  useEffect(() => {\n    const fetchCart = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/cart');\n        if (!response.ok) {\n          throw new Error('Failed to fetch cart data');\n        }\n        const data = await response.json();\n        setCart(data); // Set the fetched cart data into state\n      } catch (error) {\n        console.error('Error fetching cart data:', error);\n        setError(error.message); // Set the error message\n      }\n    };\n    fetchCart();\n  }, []);\n\n  // Check if cart is an array\n\n  if (!Array.isArray(cart)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Cart data is not valid.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Calculate total price\n\n  const totalPrice = cart.reduce((acc, item) => acc + item.productId.price * item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), \" \", cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cart.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.productId.name, \" - $\", item.productId.price, \" x \", item.quantity, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeFromCart(item.productId._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, item.productId._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total: $\", totalPrice.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(CartPage, \"ay0KtTglieOMgwke5lQWZ4pU6X4=\");\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CartPage","removeFromCart","_s","cart","setCart","error","setError","fetchCart","response","fetch","ok","Error","data","json","console","message","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","totalPrice","reduce","acc","item","productId","price","quantity","length","map","name","onClick","_id","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Sora/Desktop/frontend/src/pages/CartPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst CartPage = ({ removeFromCart }) => {\r\n\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch cart data from the backend when the component mounts\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchCart = async () => {\r\n\r\n      try {\r\n\r\n        const response = await fetch('http://localhost:5000/api/cart');\r\n\r\n        \r\n\r\n        if (!response.ok) {\r\n\r\n          throw new Error('Failed to fetch cart data');\r\n\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setCart(data); // Set the fetched cart data into state\r\n\r\n      } catch (error) {\r\n\r\n        console.error('Error fetching cart data:', error);\r\n\r\n        setError(error.message); // Set the error message\r\n\r\n      }\r\n\r\n    };\r\n\r\n    fetchCart();\r\n\r\n  }, []);\r\n\r\n  // Check if cart is an array\r\n\r\n  if (!Array.isArray(cart)) {\r\n\r\n    return <div>Error: Cart data is not valid.</div>;\r\n\r\n  }\r\n\r\n  // Calculate total price\r\n\r\n  const totalPrice = cart.reduce((acc, item) => acc + item.productId.price * item.quantity, 0);\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      <h2>Your Cart</h2>\r\n\r\n      {error && <p>Error: {error}</p>} {/* Display error message if any */}\r\n\r\n      {cart.length === 0 ? (\r\n\r\n        <p>Cart is empty.</p>\r\n\r\n      ) : (\r\n\r\n        <ul>\r\n\r\n          {cart.map(item => (\r\n\r\n            <li key={item.productId._id}>\r\n\r\n              {item.productId.name} - ${item.productId.price} x {item.quantity}\r\n\r\n              <button onClick={() => removeFromCart(item.productId._id)}>Remove</button>\r\n\r\n            </li>\r\n\r\n          ))}\r\n\r\n        </ul>\r\n\r\n      )}\r\n\r\n      <p>Total: ${totalPrice.toFixed(2)}</p> {/* Format total price to 2 decimal places */}\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n};\r\n\r\nexport default CartPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}